config {
    type: "table",
    name: "ipv6_locations",
    schema: "unified",
    tags: ["unified"],
    uniqueKey: ["network"],
    description: "Dados de geolocalização e rede unificados",
    dependencies: [
      "completness_locations_raw",
      "completness_ipv6_raw",
      "conformity_city_blocks_ipv6",
      "unique_network_ipv6",
      "precision_city_blocks_ipv6_latitude",
      "precision_city_blocks_ipv6_longitude",
      "uniqueness_ipv6",
    ],
    columns: {
        network: "Esta é a rede IPv6 no formato CIDR.",
        network_bin: "Primeiro endereço IP da rede em binário.",
        mask: "Máscara da rede.",
        continent_code: "O código do continente para esta localidade.",
        continent_name: "O nome do continente para esta localidade.",
        country_iso_code: "Um código de país ISO 3166-1 de dois caracteres para o país associado ao local.",
        country_name: "O nome do país para este local.",
        city_name: "O nome da cidade para esta localidade.",
        subdivision_1_name: "O nome da subdivisão deste local. Tal como acontece com o código de subdivisão, esta é a subdivisão menos específica para o local.",
        subdivision_2_name: "O nome da subdivisão deste local. Tal como acontece com o código de subdivisão, esta é a subdivisão mais específica para o local.",
        last_modified_date: "Data da última atualização dos dados.",
    },
    bigquery: {
      partitionBy: 'last_modified_date',
      requirePartitionFilter : true,
      partitionExpirationDays: 90,
      updatePartitionFilter: "last_modified_date >= date_sub(CURRENT_DATE(), INTERVAL 4 DAY)",
    }
}

post_operations {
    ALTER TABLE ${self()}
    SET OPTIONS (
        expiration_timestamp = TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL 90 DAY)
    );
}

SELECT
  a.network,
  NET.IP_FROM_STRING(SPLIT(a.network, '/')[OFFSET(0)]) AS network_bin,
  CAST(SPLIT(a.network, '/')[OFFSET(1)] AS INT64) AS mask,
  b.continent_code,
  b.continent_name,
  b.country_iso_code,
  b.country_name,
  b.city_name,
  b.subdivision_1_name,
  b.subdivision_2_name,
  b.last_modified_date

FROM
  ${ref('city_blocks_ipv6')} as a
LEFT JOIN
  ${ref('city_locations')} as b
ON
  a.geoname_id = b.geoname_id

${
  when(incremental(),
  `WHERE a.last_modified_date > (SELECT MAX(last_modified_date) FROM ${self()}) and
    b.last_modified_date > (SELECT MAX(last_modified_date) FROM ${self()}`,
  `WHERE a.last_modified_date = "${dataform.projectConfig.vars.lastModifiedDate}" AND
    b.last_modified_date = "${dataform.projectConfig.vars.lastModifiedDate}"`
  )
}